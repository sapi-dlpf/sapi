TODO - Lista de pendências do projeto SAPI
============================================

Planejamento de versões:
=========================

1.8) Falhas relatadas pelos últimos usuários.
---------------------------------------------
OK Melhorar feedback do sapi_cellebrite
+/- Possibilidade de correção na estrutura de itens já processada (excluir tarefas, itens).
- Tolerância a falha em caso de não resposta do SETEC3 (travamento do sapi_iped)
- Novo servidor de deployment
- O BAT que invoca o multicase não está funcionando sem ter letra mapeada.
  - Tem solução? Fazer exe que trata isto...Como resolver....
  - Talvez o pushd e popd (testar se funciona ok tando em rede, como em disco local)
  https://technet.microsoft.com/pt-br/library/bb490978.aspx


1.9) sapi_imagem e melhorias no sapi_laudo
---------------------------------------------
- Sapi_laudo:
  - Integração com siscrim para criação de laudo (comando *CL)
  - Pequenos ajustes em dados do laudo
- Possibilidade de fazer upload de imagens já criadas (para cartões de memória, por exemplo):
  - sapi_imagem: programa para fazer upload
  - sapi_laudo: precisa de modelo e tratamento para modelo para esta situação,
    misturando em um mesmo laudo dispositivos de memória com celular


1.10) Interface semi-gráfica
---------------------------------------------
- Colocar uma semi-interface gráfica no sapi_cellebrite, para mostrar a lista de tarefas, com menu de contexto
- Colocar uma semi-interface gráfica no sapi_laudo, para selecionar a itemização.

1.11) Novas funcionalidades:
---------------------------------------------
- Testar deployment em formato EXE:
  Exemplo: pyinstaller --onefile sapi_laudo.py
- Ferramenta_pesquisa.bat => Fazer um substituto em python, convertido para exe.

1.13) Novas funcionalidades:
---------------------------------------------
- Controle de acesso, para impedir que um usuário mexa em coisas do outro.
- Incluir o terceiro storage
- Opção (X) Escolher automaticamente, que irá definir o storage baseado nas características
  (carga, xxxx)
- Tratamento completo para inexiquibilidade.
- Mais de uma versão do IPED
- sapi_watchdog_log: Fica monitorando pasta de log, e reseta servidor se detectar inatividade
  https://stackoverflow.com/questions/32053618/how-to-to-terminate-process-using-pythons-multiprocessing
- Mecanismo para interromper uma tarefa em execução:
  - No servidor, possibilidade de mandar Abortar a tarefa
  - Nos clientes, quando for atualizar status e receber comando de abortar, interromper a execução.


2.0) Tratamento para mídias de massa
---------------------------------------------
2.1) Guymager
- Revisar sapi_guymager

2.2) Tableau
- Desenvolver sapi_tableau

2.3) Geração de ISO
--------------------
- Geração automática de ISO para mídia
- Armazenar o tamanho das pastas de cada tarefa
- Tem que permitir fazer o split por tamanho de mídia (máximo)
- Se não couber, aborta a tarefa
- Atualização no SETEC3 mídia anexa.
- Consulta no SETEC3 para usuário baixar mídia (talvez...)

2.4) Cópia para mídia externa
------------------------------
- sapi_midia_externa.py:
  - Pede o caminho para o HD externo. Verifica, confere.
  - Solicita um memorando que está em processamento.
  - Quando todas as tarefas associadas ao memorando em processamento forem concluídas, faz o cópia para a mídia montada
- O usuário pode deixar este program rodando na sua máquina, ou então em alguma máquina do laboratório.

2.5) Cópia direta para storage
------------------------------
- Depende de conexão veloz e disponibilidade em disco.
- Revisar sapi_copia.py

3.0) Regime de produção
---------------------------------------------
- Faciliade de uso: Interface gráfica: Substituir uso da interface Web (tudo no cliente)
- Na interface gráfica, trocar para usuário/senha (ao invés de matrícula)
- Arquivamento (ver detalhes abaixo).

4.0) Ampliação de base de usuários
---------------------------------------------
- Módulo de configuração


=======================================================================================================================
Por programa/componente:
=======================================================================================================================

@sapi_lib
* Nas requisições http, tratar ausência de resposta (timeout e retentativas)
- Na conexão com o storage, tratar senha diferenciada (hash)

@sapi_cellebrite:
  *OK Tolerância a falha na atualização do status
  *OK Tratamento adequado no caso de não conseguir modificar o status
  *OK Log significativo.
  *OK Comando EX, que exclui tarefa.
  *OK Na cópia, além do %, calcular também o tempo estimado de término.
  *OK Está dando erro para arquivo com mais de 256 caracteres...tem que tratar isto
  * Comando *h: Exibe página de ajuda no Wiki
  * Incluir novos campos (serial, ....), ver dados que marcos passou em
    I:\desenvolvimento\sapi\novos_campos_laudo\marcos_01
  * Comando *SI => Exibe situação de todas as tarefas de cada item. Algo como:
        Item                   Tarefa          Situação
        01/01: xxxxx           514-Extração    Sucesso
                               515-Iped-basico Sucesso
        -----------------------------------------------------------------------
        02/03: xxxxx           525-Extração    Aguardando ação PCF
                               526-iped-basico Aguardando Processamento
        -----------------------------------------------------------------------
  * Comando *iped: Invoca IPED para conferir resultado
  * Comando *VNC: Invoca VNC para o storage associado a este exame.
    Invocar em outro processo, para não travar...ver como o módulo webbrowser faz para invocar o browser...
    Tem que passar como parâmetro o nome (ou IP da storage)
      https://www.realvnc.com/en/docs/man/vncviewer.html
	Colocar instrução na tela de como acessar:
	  - Fazer login com conta 'consulta', senha: 'sapi'
  - No acompanhamento da cópia, exibir também a quantidade de arquivos que já foi copiado...para dar um feedback quando o tamanho fica "parado" (arquivos muito pequenos)..Ou se o campo humando for igual ao anterior, aumentar o número de casas, para deixar claro que está evoluindo. Ou ainda, só mostrar a quantidade de arquivos se o tamanho ficar "congelado".
  - Armazenar log de execução da tarefa no servidor ao término de cada comando relevante (*cr, *ex, etc)
  - Testar se gerando para VHD local e depois copiando para o storage, e reabrindo no VHD de destino tem ganho
  - Parsing de campos: pegar todos os modelos, selecionado pelo usuário, detectado, se houver mais do que um.
  - Permitir que o usuário descreva a inexquilidade (Lista com as mais comuns), que será atualizada no servidor.
  - Problema de cópia de relatório gigante do Fernando que deu erro (HD externo)

@sapi_iped_executar_bat:
- Está gerando ano_dia_mes.log (revisar....)
- No log do servidor, está aparecendo sapi_iped@10.2.192.23. Motivo???

@sapi_atualiza_iped:
OK* Limpar logs: Está ficando muitos arquivos de log na pasta.
* Limpar pasta indexador no final da execução (IPED não está conseguindo limpar)

@sapi_iped
OK * Refactor: Utilizar paradigma do sapi_cellebrite
* Exclusão de tarefa
* Ajuste para path com mais de 256 caracteres
* Mudar estrutura de log:
  gerar log em arquivo do memorando, que fica na pasta do Memorando de destino (log_sapi_iped.txt)
* Novo servidor de deployment
* Está invocando perfil setecpr_ocr ou ocr, revisar, testar
* Quando uma tarefa for devolvida (volta para estado AguardandoProcessamento),
  tem que excluir pasta antes...para ficar na situação original.
  Se não for possível excluir a pasta, o estado tem que ficar como abortada
  O ideal é primeiro colocar no estado abortada, e depois passar para o estado de AguardandoProcessamento.
  Desta forma, fica bem registrado que houve um problema.
* Revisar todas as chamadas para sapi_srv_chamar_programa:
  - Parâmetros nominados
  - abortar_insucesso=False
* Rotina para atualizar_status, que se der erro, não tem problema....
  (talvez levar do sapi_cellebrite para o sapilib...vai ser utilizada em outros lugares)
  Levar também a de troca de status.
  - Mas no caso do sapi_iped, se não conseguir trocar situação irá ficar tentando, até conseguir, em loop.
* Receber comando do servidor Web de exclusão.
  - Utilizar o mesmo paradigma dos agentes com interface, ou seja, fica lendo um comando que será passado
    (ao invés de passar o comando pela linha de comando, vem via http)
* Na mensagem do hash, está aparecendo o texto listaArquivos.csv, quando deveria ser "Lista de Arquivos.csv" (Dante)
* Quando for montar multicase, desprezar pastas que não possuam conteúdo (acho que já faz isto...)
* Receber comando de exclusão de tarefa.
  - No servidor, quando mandar excluir tarefa, irá mudar para status (Aguardando execução), e o tipo será 'excluir'.
  - Exclui pasta, e refaz o multicase.
* Utilar sapilib com tratamento de timeout e retentativas para aumentar tolerância a falha
  - Simular tratavadas...colocar resposta para dormir no servidor, com aleatoriedade, forçando retentativas...
* Atualização de status intermediários, se não tiverem sucesso, tudo bem, tenta algumas vezes e desiste.
* Atualização de status final, se não tiver sucesso após algumas tentativas, coloca tarefa como abortada (para ser retomada adiante)
  e prossegue para a próxima.
- Fazer upload da pasta "lista arquivos.csv"
- Permitir executar mais de uma versão do IPED.
- Quando terminar a execução de uma tarefa, fazer o upload do log da tarefa (teria utilidade?)
- Nao processar o UFDR e o XML: Mover poara outra pasta, e depois retornar novamente para a pasta original
  O XML podia até elmininar no destino, para não ocupar espaço.

@sapi_watchdog (NOVO)
- Novo programa, que ficará monitorando se pasta de arquivo de log está sendo modificidado.
  https://stackoverflow.com/questions/32053618/how-to-to-terminate-process-using-pythons-multiprocessing
- Parâmetros:
  - pasta a ser monitorada:
  - tempo de espera:
  - acao=restart servidor
- Pode ter até mais de um watchdog rodando. Um pode por exemplo mandar email, etc, e outro pode restart o servidor.
- sapi_watchdog não pode usar sapilib, para evitar "se congelar" pelo mesmo motivo que os outros programas...tem que ser leve.

@sapi_imagem (NOVO):
  - Funcionalidade de submeter uma imagem a processamento
  - Reconhece formato do guymager (log)
  - Reconhece formato do tableu (log)
  - Reconhece outros formatos sem log, mas neste caso não recupera nenhum dado para laudo:
     - E01 genérico
     - DD genérico
     - Outros formatos raw (qualquer arquivo):
       - Neste caso, ajusta para nomenclatura do IPED (apenas algumas extensões são aceitas...testar)
       - Se tiver vários arquivos que formam um conjunto, tem que dar algum tratamento.


@sapi_laudo:
  * converter para sapilib0.8
  - Renomear Locica(1), Logica(2) para "Cartão SIM (1)", "Cartão SIM (2)"
  - Criar sapicli, que irá agrupar todas as funções comumente utilizadas pelos clientes sapi.
  - Ajustar interface com novos comandos.
  - MSISDN: Quando não existir, já preencher como 'INDISPONÍVEL'
  - Preencher com descrição de inexequibilidade.
  * Pedir solicitação de exame, e verificar se tem laudo
    - Se não tiver, dar opção para criar *CL, que irá invocar diretamente a tela de cadastro de laudo do SisCrim
  * Tratar material de destino compartilhado, que esteja sendo referenciado em mais de um laudo.
    - Na árvore, este material aparece em um só lugar, mas existem vários laudos citando este material
    (exemplo flashback, feita pelo Marcos/Brunori)
  - Comando para criar laudo no setec3 avulso no menu, caso usuário queira criar mais um laudo
    - Confirma que já existe um laudo
    - Informa que se usuário quer criar laudo para outro memorando, deve utilizar comando de troca de memorando
  - Wizard...talvez seja útil para diálogos encadeados, se for necessário:
    https://stackoverflow.com/questions/41332955/creating-a-wizard-in-tkinter
  - Mudança de conceito, autenticação por usuário senha:
      - Solicitar login/senha através de tkinter:
	    http://effbot.org/tkinterbook/tkinter-dialog-windows.htm
		https://stackoverflow.com/questions/2416486/how-to-create-a-password-entry-field-using-tkinter
      - Utilizando usuário e senha informado, obter a lista de solicitação de exame do usuário.
	    - Depois que usuário escolhe a solicitação de exame, se não existir laudo, solicitar se usuário deseja criar.
		- Se deseja criar, invocar a URL do Siscrim correspondente à criação do laudo:
      - Quando for baixar modelo de laudo, fazer conexão diretamento no SisCrim, baixando o modelo adequado.
  - Download automático do modelo do laudo (sem usuário ter que salvar na sua área):
    - Precisa fazer a autenticação no SisCrim automaticamente (com login/senha fornecidos durantes autenticação no SAPI) e guardar em cookies:
      https://stackoverflow.com/questions/9548729/how-to-authenticate-a-site-with-python-using-urllib2
      https://stackoverflow.com/questions/923296/keeping-a-session-in-python-while-making-http-requests

@sapi_tableau (NOVO):
  - Primeiro fazer o parser no sapi_imagem, para ter uma solução razoável para o pessoal ir utilizando.
  - Controlar interface web


DEPLOYMENT
==========================================================================
Deployment:
  - Montar esquema de deployment no macsetec3
  - No servidor de deployment, a credencial de acesso (login/senha) não pode ser igual à do servidor,
    caso contrário o servidor se loga sozinho...é melhor controlar este acesso, utilizando uma conta diferente.
    deployment_admin
    deployment_consulta
  - Roteiro do servidor de deployment no wiki
  - No desevolvimento, ajustar servidor de deployment para macsetec2.
  - O endereço do servidor de deployment deve ficar no conf, assim cada máquina tem o deployment independente.
  - Para permitir deployment individual de cada programa, fazer configuração individual no setec3.
    sapi_cellebrite.config.php
    sapi_laudo.config.php
    (etc)
    - Armazenar versão e outros dados úteis...talvez através de constantes simbólicas
  - Pasta de download, que armazena versões antigas.


SETEC3
=====================
conf.inc
- Trocar referências a DNS por ip fixo (diminui a chance de problema quando temos problema de DNS).

SETEC3 ????.php
 * Quando uma mensagem de log for inserida, efetuar a exclusão de mensagens irrelevantes (ver script),
  para manter log enxuto.

SETEC3 sapi_painel_administracao.php
- Novo resumo usuário x Situação
- Resumo Tipo x Situação trocar por Situação x Tipo
- Tarefas por período.

SETEC3 sapi_tarefa:
  * Para tarefa de extração:
    - Não permitir Excluir, Reiniciar, Abortar...tudo isto será executado agora apenas pelo sapi_cellebrite
    - Colocar texto esclarecendo isto.
  * Para tarefa de IPED:
    - Permitir excluir, que tem que ser capaz de
      - Parar execução se ainda estiver executando e excluir pasta
      - Excluir pasta de uma execução já concluída, e corrigir o multicase, para não sobrar rastro da tarefa
        (utilizar tipo 'excluir'...??? ou reprocessar normalmente?...talvez seja melhor)
  - Exibir a lista de arquivos associados à tarefa (que foi feito upload)

SETEC3 sapi_exame.php:
* Não permitir CLIQUE DUPLO no botão (se clicar, desabilitar o botão)
* Tratar ; ou , no final do item. Está aparecendo item nulo na tela de itens.
* Incluir [x] Eu conferi a estrutura das pastas e está de acordo.
  - Se não tem nenhuma tarefa, exibir apenas o bloco de conferência da estrutura.
  - Quando usuário clicar no [x], faz submit...pode ser um botão também [Conferido]
  - Se foi conferido (armazenar como hidden), não faz mais este tratamento.
- Não permitir indicar material de destino, se não houver material de destino devidamento incluído na lista de materiais
- Botão [Gerar], deixar mais claro que também serve para fazer ajustes em tarefas que já foram geradas
  (exemplo: mídia de entrega)
  - Permitir mais de uma versão de IPED, para poder colocar uma versão "Homologada" e outras "novas"
- Quadro para orientar a confecção do laudo:
  - Explicar procedimento (Cadastar laudo, gerar modelo, invocar sapi_laudo.py)
  - Exibir laudos cadastrados
  - Botão para Cadastrar Laudo
  - Botão para gerar modelo do Laudo (Talvez já deixar amarrado aqui o código dos laudos do SAPI....boa)


Modelos:
* Ajustar MJSP para todos (revisar geral)
* Colocar todos os campos que vem de digitação manual (secretaria) em fundo verde (nome do delegado, número do IPL) para que seja revisado.
* Tem um espaço em cinza que aparece depois entre o nO. e IPL, entre o No. e outros números...
- Quantidade de páginas, está ficando fixo depois que processa pelo sapi_laudo.py.
  - Por enquanto, colocar em vermelho, e uma observação para alterar/revisar.
  - Descobrir solução definitiva.
- Pensar em deixar a folha de mídia anexa no laudo quando for DVD/Bluray, para facilitar
  (e neste caso também deixar a folha para imprimir a etiqueta da mídia)
- Separar modelo de mídia óptica de BLURAY e DVD
- Etiqueta p/ RIMAGE P/ DVD: Colocar DVD na direita (como o bluray)

mídia anexa:
  - Reativar mídia anexa para permitir upload de dados gravados.
    - Limpar base. Salvar dump da base de dados antes de limpar, caso no futuro surja alguma dúvida.
  - Permitir upload por programa, para que os isos produzidos no sapi possam ser copiados para o sistema mídia anexa.


MÁQUINAS DE EXAME
===================================================
Máquinas do Cellebrite:
- Instalar libreoffice
- Instalar VNC viewer
- No email, informar que é possível executar todas as tarefas lá...


STORAGES
===================================================
GTPI-STO-01:
  - Promover o GTPI-STO-01 em produtivo.
  - Colocar

GTPI-STO-02:
  - Colocar o GTPI-STO-02 em desenvolvimento novamente.
  - Ajustar deployment para desenvolvimento
  - Deixar rodando

GTPI-STO-03:
  - Reinstalar windows via pendrive. A reinstalação normal não funcionou.


NOVAS FUNCIONALIDADES:
=======================================================================
Arquivamento:
- Limpara pastas de processamento (precisará de um programa específico) que rodará quando:
  - O memorando tiver sido arquivado a mais de 10 dias.
  - O laudo foi entregue e existe confirmação de recebimento.
  - A máquina está ociosa.
  - Em período noturno.

Geração de ISO:
- Armazenar e mostrar o tamanho de cada pasta.
- Permitir a seleção de itens, mostrando o tamanho de cada conjunto (para verificar se cabe na mídia de destino).
- Geração de uma ou mais mídias para cada memorando (tarefas distintas).
- Upload da mídia gerada para o servidor de mídia anexa.


